{"ast":null,"code":"// src/redux/blockchain/blockchainReducer.js\nconst initialState={loading:false,account:null,web3:null,LootBoxNFT:null,// Store the LootBoxNFT contract\nerrorMsg:\"\"// General error message for the connection\n};const blockchainReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"CONNECT_REQUEST\":return{...state,loading:true,errorMsg:\"\"// Clear any previous connection errors\n};case\"CONNECT_SUCCESS\":return{...state,loading:false,account:action.payload.account,web3:action.payload.web3,errorMsg:\"\"// Clear error messages on success\n};case\"CONNECT_FAILED\":return{...state,loading:false,account:null,// Reset account if connection failed\nweb3:null,// Clear web3 on failure\nerrorMsg:action.payload// Set the error message for connection failure\n};case\"SET_LOOTBOXNFT_CONTRACT\":return{...state,LootBoxNFT:action.payload// Store the LootBoxNFT contract\n};case\"UPDATE_ACCOUNT\":return{...state,account:action.payload.account,errorMsg:\"\"// Clear general error on account update\n};default:return state;}};export default blockchainReducer;","map":{"version":3,"names":["initialState","loading","account","web3","LootBoxNFT","errorMsg","blockchainReducer","state","arguments","length","undefined","action","type","payload"],"sources":["C:/Users/deanw/OneDrive/Desktop/GitHub/tribepacks/src/redux/blockchain/blockchainReducer.js"],"sourcesContent":["// src/redux/blockchain/blockchainReducer.js\n\nconst initialState = {\n  loading: false,\n  account: null,\n  web3: null,\n  LootBoxNFT: null, // Store the LootBoxNFT contract\n  errorMsg: \"\", // General error message for the connection\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECT_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMsg: \"\", // Clear any previous connection errors\n      };\n\n    case \"CONNECT_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        web3: action.payload.web3,\n        errorMsg: \"\", // Clear error messages on success\n      };\n\n    case \"CONNECT_FAILED\":\n      return {\n        ...state,\n        loading: false,\n        account: null, // Reset account if connection failed\n        web3: null, // Clear web3 on failure\n        errorMsg: action.payload, // Set the error message for connection failure\n      };\n\n    case \"SET_LOOTBOXNFT_CONTRACT\":\n      return {\n        ...state,\n        LootBoxNFT: action.payload, // Store the LootBoxNFT contract\n      };\n\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n        errorMsg: \"\", // Clear general error on account update\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;"],"mappings":"AAAA;AAEA,KAAM,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,IAAI,CACVC,UAAU,CAAE,IAAI,CAAE;AAClBC,QAAQ,CAAE,EAAI;AAChB,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGR,YAAY,IAAE,CAAAW,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACrD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,iBAAiB,CACpB,MAAO,CACL,GAAGL,KAAK,CACRN,OAAO,CAAE,IAAI,CACbI,QAAQ,CAAE,EAAI;AAChB,CAAC,CAEH,IAAK,iBAAiB,CACpB,MAAO,CACL,GAAGE,KAAK,CACRN,OAAO,CAAE,KAAK,CACdC,OAAO,CAAES,MAAM,CAACE,OAAO,CAACX,OAAO,CAC/BC,IAAI,CAAEQ,MAAM,CAACE,OAAO,CAACV,IAAI,CACzBE,QAAQ,CAAE,EAAI;AAChB,CAAC,CAEH,IAAK,gBAAgB,CACnB,MAAO,CACL,GAAGE,KAAK,CACRN,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,IAAI,CAAE;AACfC,IAAI,CAAE,IAAI,CAAE;AACZE,QAAQ,CAAEM,MAAM,CAACE,OAAS;AAC5B,CAAC,CAEH,IAAK,yBAAyB,CAC5B,MAAO,CACL,GAAGN,KAAK,CACRH,UAAU,CAAEO,MAAM,CAACE,OAAS;AAC9B,CAAC,CAEH,IAAK,gBAAgB,CACnB,MAAO,CACL,GAAGN,KAAK,CACRL,OAAO,CAAES,MAAM,CAACE,OAAO,CAACX,OAAO,CAC/BG,QAAQ,CAAE,EAAI;AAChB,CAAC,CAEH,QACE,MAAO,CAAAE,KAAK,CAChB,CACF,CAAC,CAED,cAAe,CAAAD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}