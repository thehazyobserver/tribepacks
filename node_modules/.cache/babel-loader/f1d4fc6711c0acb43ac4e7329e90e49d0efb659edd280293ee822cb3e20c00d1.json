{"ast":null,"code":"// src/redux/blockchain/blockchainActions.js\nimport Web3 from\"web3\";// Action Types\nexport const CONNECT_REQUEST=\"CONNECT_REQUEST\";export const CONNECT_SUCCESS=\"CONNECT_SUCCESS\";export const CONNECT_FAILED=\"CONNECT_FAILED\";// Connect to the blockchain\nexport const connect=CONFIG=>{return async dispatch=>{dispatch({type:CONNECT_REQUEST});if(!CONFIG){console.error(\"CONFIG data is missing.\");dispatch({type:CONNECT_FAILED,payload:\"Configuration data is missing.\"});return;}if(window.ethereum){try{const web3=new Web3(window.ethereum);const accounts=await window.ethereum.request({method:\"eth_requestAccounts\"});const networkId=await window.ethereum.request({method:\"net_version\"});// Check if connected to the correct network\nif(networkId===CONFIG.NETWORK.ID.toString()){// Dispatch connection success\ndispatch({type:CONNECT_SUCCESS,payload:{account:accounts[0],web3}});}else{console.error(\"Wrong network. Please switch to the correct network.\");dispatch({type:CONNECT_FAILED,payload:`Please connect to the ${CONFIG.NETWORK.NAME} network.`});}}catch(err){console.error(\"Failed to connect to the blockchain:\",err);dispatch({type:CONNECT_FAILED,payload:\"Failed to connect to the blockchain.\"});}}else{console.error(\"MetaMask or other Web3 wallet not detected.\");dispatch({type:CONNECT_FAILED,payload:\"PLEASE INSTALL A WEB3 WALLET LIKE RABBY\"});}};};","map":{"version":3,"names":["Web3","CONNECT_REQUEST","CONNECT_SUCCESS","CONNECT_FAILED","connect","CONFIG","dispatch","type","console","error","payload","window","ethereum","web3","accounts","request","method","networkId","NETWORK","ID","toString","account","NAME","err"],"sources":["C:/Users/deanw/OneDrive/Desktop/GitHub/tribepacks/src/redux/blockchain/blockchainActions.js"],"sourcesContent":["// src/redux/blockchain/blockchainActions.js\nimport Web3 from \"web3\";\n\n// Action Types\nexport const CONNECT_REQUEST = \"CONNECT_REQUEST\";\nexport const CONNECT_SUCCESS = \"CONNECT_SUCCESS\";\nexport const CONNECT_FAILED = \"CONNECT_FAILED\";\n\n// Connect to the blockchain\nexport const connect = (CONFIG) => {\n  return async (dispatch) => {\n    dispatch({ type: CONNECT_REQUEST });\n\n    if (!CONFIG) {\n      console.error(\"CONFIG data is missing.\");\n      dispatch({\n        type: CONNECT_FAILED,\n        payload: \"Configuration data is missing.\",\n      });\n      return;\n    }\n\n    if (window.ethereum) {\n      try {\n        const web3 = new Web3(window.ethereum);\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n\n        // Check if connected to the correct network\n        if (networkId === CONFIG.NETWORK.ID.toString()) {\n          // Dispatch connection success\n          dispatch({\n            type: CONNECT_SUCCESS,\n            payload: {\n              account: accounts[0],\n              web3,\n            },\n          });\n        } else {\n          console.error(\"Wrong network. Please switch to the correct network.\");\n          dispatch({\n            type: CONNECT_FAILED,\n            payload: `Please connect to the ${CONFIG.NETWORK.NAME} network.`,\n          });\n        }\n      } catch (err) {\n        console.error(\"Failed to connect to the blockchain:\", err);\n        dispatch({\n          type: CONNECT_FAILED,\n          payload: \"Failed to connect to the blockchain.\",\n        });\n      }\n    } else {\n      console.error(\"MetaMask or other Web3 wallet not detected.\");\n      dispatch({\n        type: CONNECT_FAILED,\n        payload: \"PLEASE INSTALL A WEB3 WALLET LIKE RABBY\",\n      });\n    }\n  };\n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,IAAI,KAAM,MAAM,CAEvB;AACA,MAAO,MAAM,CAAAC,eAAe,CAAG,iBAAiB,CAChD,MAAO,MAAM,CAAAC,eAAe,CAAG,iBAAiB,CAChD,MAAO,MAAM,CAAAC,cAAc,CAAG,gBAAgB,CAE9C;AACA,MAAO,MAAM,CAAAC,OAAO,CAAIC,MAAM,EAAK,CACjC,MAAO,MAAO,CAAAC,QAAQ,EAAK,CACzBA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,eAAgB,CAAC,CAAC,CAEnC,GAAI,CAACI,MAAM,CAAE,CACXG,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC,CACxCH,QAAQ,CAAC,CACPC,IAAI,CAAEJ,cAAc,CACpBO,OAAO,CAAE,gCACX,CAAC,CAAC,CACF,OACF,CAEA,GAAIC,MAAM,CAACC,QAAQ,CAAE,CACnB,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAb,IAAI,CAACW,MAAM,CAACC,QAAQ,CAAC,CACtC,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAH,MAAM,CAACC,QAAQ,CAACG,OAAO,CAAC,CAC7CC,MAAM,CAAE,qBACV,CAAC,CAAC,CACF,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAN,MAAM,CAACC,QAAQ,CAACG,OAAO,CAAC,CAC9CC,MAAM,CAAE,aACV,CAAC,CAAC,CAEF;AACA,GAAIC,SAAS,GAAKZ,MAAM,CAACa,OAAO,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAE,CAC9C;AACAd,QAAQ,CAAC,CACPC,IAAI,CAAEL,eAAe,CACrBQ,OAAO,CAAE,CACPW,OAAO,CAAEP,QAAQ,CAAC,CAAC,CAAC,CACpBD,IACF,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLL,OAAO,CAACC,KAAK,CAAC,sDAAsD,CAAC,CACrEH,QAAQ,CAAC,CACPC,IAAI,CAAEJ,cAAc,CACpBO,OAAO,CAAE,yBAAyBL,MAAM,CAACa,OAAO,CAACI,IAAI,WACvD,CAAC,CAAC,CACJ,CACF,CAAE,MAAOC,GAAG,CAAE,CACZf,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAEc,GAAG,CAAC,CAC1DjB,QAAQ,CAAC,CACPC,IAAI,CAAEJ,cAAc,CACpBO,OAAO,CAAE,sCACX,CAAC,CAAC,CACJ,CACF,CAAC,IAAM,CACLF,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC,CAC5DH,QAAQ,CAAC,CACPC,IAAI,CAAEJ,cAAc,CACpBO,OAAO,CAAE,yCACX,CAAC,CAAC,CACJ,CACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}