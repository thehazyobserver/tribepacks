{"ast":null,"code":"function number(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n  return a instanceof Uint8Array || a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array';\n}\nfunction bytes(b) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  for (var _len = arguments.length, lengths = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    lengths[_key - 1] = arguments[_key];\n  }\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n  if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\nfunction exists(instance) {\n  let checkFinished = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output\n};\nexport default assert;","map":{"version":3,"names":["number","n","Number","isSafeInteger","Error","bool","b","isBytes","a","Uint8Array","constructor","name","bytes","_len","arguments","length","lengths","Array","_key","includes","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","undefined","destroyed","finished","output","out","min","assert"],"sources":["C:\\Users\\deanw\\OneDrive\\Desktop\\GitHub\\tribepacks\\node_modules\\@noble\\hashes\\src\\_assert.ts"],"sourcesContent":["function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n"],"mappings":"AAAA,SAASA,MAAMA,CAACC,CAAS;EACvB,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,kCAAkCH,CAAC,EAAE,CAAC;AAC/F;AAEA,SAASI,IAAIA,CAACC,CAAU;EACtB,IAAI,OAAOA,CAAC,KAAK,SAAS,EAAE,MAAM,IAAIF,KAAK,CAAC,yBAAyBE,CAAC,EAAE,CAAC;AAC3E;AAEA;AACA,OAAM,SAAUC,OAAOA,CAACC,CAAU;EAChC,OACEA,CAAC,YAAYC,UAAU,IACtBD,CAAC,IAAI,IAAI,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,YAAa;AAE/E;AAEA,SAASC,KAAKA,CAACN,CAAyB,EAAsB;EAC5D,IAAI,CAACC,OAAO,CAACD,CAAC,CAAC,EAAE,MAAM,IAAIF,KAAK,CAAC,qBAAqB,CAAC;EAAC,SAAAS,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADbC,OAAiB,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAjBF,OAAiB,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAE5D,IAAIF,OAAO,CAACD,MAAM,GAAG,CAAC,IAAI,CAACC,OAAO,CAACG,QAAQ,CAACb,CAAC,CAACS,MAAM,CAAC,EACnD,MAAM,IAAIX,KAAK,CAAC,iCAAiCY,OAAO,mBAAmBV,CAAC,CAACS,MAAM,EAAE,CAAC;AAC1F;AAQA,SAASK,IAAIA,CAACC,CAAO;EACnB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,CAACC,MAAM,KAAK,UAAU,EAC3D,MAAM,IAAIlB,KAAK,CAAC,iDAAiD,CAAC;EACpEJ,MAAM,CAACqB,CAAC,CAACE,SAAS,CAAC;EACnBvB,MAAM,CAACqB,CAAC,CAACG,QAAQ,CAAC;AACpB;AAEA,SAASC,MAAMA,CAACC,QAAa,EAAsB;EAAA,IAApBC,aAAa,GAAAb,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAc,SAAA,GAAAd,SAAA,MAAG,IAAI;EACjD,IAAIY,QAAQ,CAACG,SAAS,EAAE,MAAM,IAAIzB,KAAK,CAAC,kCAAkC,CAAC;EAC3E,IAAIuB,aAAa,IAAID,QAAQ,CAACI,QAAQ,EAAE,MAAM,IAAI1B,KAAK,CAAC,uCAAuC,CAAC;AAClG;AACA,SAAS2B,MAAMA,CAACC,GAAQ,EAAEN,QAAa;EACrCd,KAAK,CAACoB,GAAG,CAAC;EACV,MAAMC,GAAG,GAAGP,QAAQ,CAACH,SAAS;EAC9B,IAAIS,GAAG,CAACjB,MAAM,GAAGkB,GAAG,EAAE;IACpB,MAAM,IAAI7B,KAAK,CAAC,yDAAyD6B,GAAG,EAAE,CAAC;EACjF;AACF;AAEA,SAASjC,MAAM,EAAEK,IAAI,EAAEO,KAAK,EAAEQ,IAAI,EAAEK,MAAM,EAAEM,MAAM;AAElD,MAAMG,MAAM,GAAG;EAAElC,MAAM;EAAEK,IAAI;EAAEO,KAAK;EAAEQ,IAAI;EAAEK,MAAM;EAAEM;AAAM,CAAE;AAC5D,eAAeG,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}